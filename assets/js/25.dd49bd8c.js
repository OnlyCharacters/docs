(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{306:function(e,s,t){"use strict";t.r(s);var a=t(14),n=Object(a.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("blockquote",[s("h1",{attrs:{id:"_1-kubernetes-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-kubernetes-概述"}},[e._v("#")]),e._v(" 1 Kubernetes 概述")])]),e._v(" "),s("p",[e._v("Kubernetes 是容器集群管理系统，是一个开源的平台，可以实现容器集群的自动化部署、自动扩缩容、维护等功能。")]),e._v(" "),s("h2",{attrs:{id:"_1-1-kubernetes-特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-kubernetes-特点"}},[e._v("#")]),e._v(" 1.1 Kubernetes 特点：")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("可移植: 支持公有云，私有云，混合云，多重云（multi-cloud）")])]),e._v(" "),s("li",[s("p",[e._v("可扩展: 模块化, 插件化, 可挂载, 可组合")])]),e._v(" "),s("li",[s("p",[e._v("自动化: 自动部署，自动重启，自动复制，自动伸缩/扩展")])])]),e._v(" "),s("h2",{attrs:{id:"_1-2-master-组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-master-组件"}},[e._v("#")]),e._v(" 1.2 Master 组件：")]),e._v(" "),s("blockquote",[s("h1",{attrs:{id:"_2-部署-k8s"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-部署-k8s"}},[e._v("#")]),e._v(" 2 部署 k8s")])]),e._v(" "),s("h2",{attrs:{id:"_2-1-安装-docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-安装-docker"}},[e._v("#")]),e._v(" 2.1 安装 docker")]),e._v(" "),s("p",[e._v("参考："),s("a",{attrs:{href:"https://docs.docker.com/engine/install/binaries/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Install Docker Engine from binaries | Docker Docs"),s("OutboundLink")],1)]),e._v(" "),s("ol",[s("li",[s("p",[e._v("安装依赖")]),e._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# yum")]),e._v("\nyum "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" openssl-devel "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" iptables xz-utils\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# apt")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("apt")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" libssl-dev "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" iptables xz-utils\n")])])])]),e._v(" "),s("li",[s("p",[e._v("下载二进制文件")]),e._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 下载地址 https://download.docker.com/linux/static/stable/x86_64/")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 本机下载，上传至服务器即可")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("DOCKER_VERSION")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"24.0.7"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("DOCKER_DIR")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/opt/docker_'),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_VERSION}")]),e._v('"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-p")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-p")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v("/bin\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("wget")]),e._v(" https://download.docker.com/linux/static/stable/x86_64/docker-"),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_VERSION}")]),e._v(".tgz\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("tar")]),e._v(" xzvf docker-"),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_VERSION}")]),e._v(".tgz "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-C")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("mv")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v("/docker "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v("/bin\n")])])])]),e._v(" "),s("li",[s("p",[e._v("创建文件夹，添加 containerd 配置文件")]),e._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v("/containerd_config\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v("/containerd_root\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v("/containerd_sock\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v("/containerd_state\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v("/dockerd_exec\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v("/dockerd_pid\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v("/dockerd_root\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v("/dockerd_sock\n")])])]),s("p",[e._v("执行下面命令，将配置文件 config.yml 到 ${DOCKER_DIR}/containerd_config/config.yml")]),e._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("EOF"),s("span",{pre:!0,attrs:{class:"token bash punctuation"}},[e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v("/containerd_config/config.yml")]),e._v('\n#   Copyright 2018-2022 Docker Inc.\n\n#   Licensed under the Apache License, Version 2.0 (the "License");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n\n#       http://www.apache.org/licenses/LICENSE-2.0\n\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an "AS IS" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n\ndisabled_plugins = ["cri"]\n\nroot = "'),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v('/containerd_root"\nstate = "'),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v('/containerd_state"\n#subreaper = true\n#oom_score = 0\n\n[grpc]\naddress = "'),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v('/containerd_sock/containerd.sock"\nuid = 0\ngid = 0\n\n#[debug]\n#  address = "/run/containerd/debug.sock"\n#  uid = 0\n#  gid = 0\n#  level = "info"\nEOF')]),e._v("\n")])])]),s("p",[e._v("执行下面命令，配置 daemon.json 到 ${DOCKER_DIR}/dockerd_config/daemon.json")]),e._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("EOF"),s("span",{pre:!0,attrs:{class:"token bash punctuation"}},[e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v("/dockerd_config/daemon.json")]),e._v("\n{}\nEOF")]),e._v("\n")])])])]),e._v(" "),s("li",[s("p",[e._v("设置 systemd 服务")]),e._v(" "),s("p",[e._v("参考：")]),e._v(" "),s("ol",[s("li",[s("p",[s("a",{attrs:{href:"https://github.com/moby/moby/tree/master/contrib/init/systemd",target:"_blank",rel:"noopener noreferrer"}},[e._v("docker.socket & docker.service"),s("OutboundLink")],1)])]),e._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://github.com/containerd/containerd/blob/main/containerd.service",target:"_blank",rel:"noopener noreferrer"}},[e._v("containerd.service"),s("OutboundLink")],1)])])]),e._v(" "),s("p",[e._v("执行下面命令，设置环境变量到 /etc/profile.d/docker.sh")]),e._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("EOF"),s("span",{pre:!0,attrs:{class:"token bash punctuation"}},[e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" /etc/profile.d/docker.sh")]),e._v("\nexport PATH="),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("PATH")]),e._v("}")]),e._v(":"),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v("/bin\nexport DOCKER_HOST=unix://"),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v("/dockerd_sock/docker.sock\nEOF")]),e._v("\n")])])]),s("ul",[s("li",[s("p",[e._v("containerd.service")]),e._v(" "),s("p",[e._v("执行下面命令，配置 containerd.service 到 /etc/systemd/system/containerd.service")]),e._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("EOF"),s("span",{pre:!0,attrs:{class:"token bash punctuation"}},[e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" /etc/systemd/system/containerd.service")]),e._v('\n# Copyright The containerd Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the "License");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an "AS IS" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n[Unit]\nDescription=containerd container runtime\nDocumentation=https://containerd.io\nAfter=network.target local-fs.target\n\n[Service]\n#uncomment to fallback to legacy CRI plugin implementation with podsandbox support.\n#Environment="DISABLE_CRI_SANDBOXES=1"\nExecStartPre=-/sbin/modprobe overlay\nExecStart='),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v("/bin/containerd --config "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v("/containerd_config/config.yml\n\nType=notify\nDelegate=yes\nKillMode=process\nRestart=always\nRestartSec=5\n\n# Having non-zero Limit*s causes performance problems due to accounting overhead\n# in the kernel. We recommend using cgroups to do container-local accounting.\nLimitNOFILE=infinity\nLimitNPROC=infinity\nLimitCORE=infinity\n\n# Comment TasksMax if your systemd version does not supports it.\n# Only systemd 226 and above support this version.\nTasksMax=infinity\nOOMScoreAdjust=-999\n\n[Install]\nWantedBy=multi-user.target\nEOF")]),e._v("\n")])])])]),e._v(" "),s("li",[s("p",[e._v("docker.socket")]),e._v(" "),s("p",[e._v("执行下面命令，配置 docker.socket 到 /etc/systemd/system/docker.socket")]),e._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("EOF"),s("span",{pre:!0,attrs:{class:"token bash punctuation"}},[e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" /etc/systemd/system/docker.socket")]),e._v("\n[Unit]\nDescription=Docker Socket for the API\n\n[Socket]\n# If /var/run is not implemented as a symlink to /run, you may need to\n# specify ListenStream=/var/run/docker.sock instead.\nListenStream="),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v("/dockerd_sock/docker.sock\nSocketMode=0660\nSocketUser=root\nSocketGroup=root\n\n[Install]\nWantedBy=sockets.target\nEOF")]),e._v("\n")])])])]),e._v(" "),s("li",[s("p",[e._v("docker.service")]),e._v(" "),s("p",[e._v("执行下面命令，配置 docker.service 到 /etc/systemd/system/docker.service")]),e._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("EOF"),s("span",{pre:!0,attrs:{class:"token bash punctuation"}},[e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" /etc/systemd/system/docker.service")]),e._v('\n[Unit]\nDescription=Docker Application Container Engine\nDocumentation=https://docs.docker.com\nAfter=network-online.target docker.socket firewalld.service containerd.service time-set.service\nWants=network-online.target containerd.service\nRequires=docker.socket\n\n[Service]\nType=notify\n# the default is not to use systemd for cgroups because the delegate issues still\n# exists and systemd currently does not support the cgroup feature set required\n# for containers run by docker\nExecStart=/bin/bash -c "PATH='),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("PATH")]),e._v("}")]),e._v(":/opt/docker_24.0.7/bin exec "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v("/bin/dockerd --config-file "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v("/dockerd_config/daemon.json --host unix://{DOCKER_DIR}/dockerd_sock/docker.sock --group root --containerd "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v("/containerd_sockcontainerd.sock --data-root "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v("/dockerd_root --exec-root "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v("/dockerd_exec--pidfile "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${DOCKER_DIR}")]),e._v("/dockerd_pid/docker.pid\nExecReload=/bin/kill -s HUP "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$MAINPID")]),e._v('\nTimeoutStartSec=0\nRestartSec=2\nRestart=always\n\n# Note that StartLimit* options were moved from "Service" to "Unit" in systemd 229.\n# Both the old, and new location are accepted by systemd 229 and up, so using the old location\n# to make them work for either version of systemd.\nStartLimitBurst=3\n\n# Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230.\n# Both the old, and new name are accepted by systemd 230 and up, so using the old name to make\n# this option work for either version of systemd.\nStartLimitInterval=60s\n\n# Having non-zero Limit*s causes performance problems due to accounting overhead\n# in the kernel. We recommend using cgroups to do container-local accounting.\nLimitNOFILE=infinity\nLimitNPROC=infinity\nLimitCORE=infinity\n\n# Comment TasksMax if your systemd version does not support it.\n# Only systemd 226 and above support this option.\nTasksMax=infinity\n\n# set delegate yes so that systemd does not reset the cgroups of docker containers\nDelegate=yes\n\n# kill only the docker process, not all processes in the cgroup\nKillMode=process\nOOMScoreAdjust=-500\n\n[Install]\nWantedBy=multi-user.target\nEOF')]),e._v("\n")])])])])]),e._v(" "),s("p",[e._v("使服务生效并开机启动")]),e._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[e._v("systemctl daemon-reload\nsystemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("enable")]),e._v(" containerd.service docker.socket docker.service\n")])])])])]),e._v(" "),s("h2",{attrs:{id:"kubectl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kubectl"}},[e._v("#")]),e._v(" kubectl")]),e._v(" "),s("p",[e._v("参考："),s("a",{attrs:{href:"https://kubernetes.io/zh-cn/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#installing-kubeadm-kubelet-and-kubectl",target:"_blank",rel:"noopener noreferrer"}},[e._v("安装 kubeadm、kubelet 和 kubectl"),s("OutboundLink")],1)]),e._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("WORK_DIR")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/opt/k8s"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("ARCH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"amd64"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("K8S_ENV_DIR")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${WORK_DIR}")]),e._v('/env"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-p")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${K8S_ENV_DIR}")]),e._v('"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${WORK_DIR}")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 安装 CNI 插件")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("CNI_DIR")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${WORK_DIR}")]),e._v('/cni/bin"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("CNI_PLUGINS_VERSION")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"v1.3.0"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-p")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${CNI_DIR}")]),e._v('"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-L")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"https://github.com/containernetworking/plugins/releases/download/'),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${CNI_PLUGINS_VERSION}")]),e._v("/cni-plugins-linux-"),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${ARCH}")]),e._v("-"),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${CNI_PLUGINS_VERSION}")]),e._v('.tgz"')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("tar")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-C")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$CNI_DIR")]),e._v('"')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-xz")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 安装 crictl（kubeadm/kubelet 容器运行时接口（CRI）所需）")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("CRI_DIR")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${WORK_DIR}")]),e._v('/cri/bin"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("CRICTL_VERSION")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"v1.28.0"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-p")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${CRI_DIR}")]),e._v('"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-L")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"https://github.com/kubernetes-sigs/cri-tools/releases/download/'),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${CRICTL_VERSION}")]),e._v("/crictl-"),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${CRICTL_VERSION}")]),e._v("-linux-"),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${ARCH}")]),e._v('.tar.gz"')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("tar")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-C")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${CRI_DIR}")]),e._v('"')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-xz")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 安装 kubeadm, kubelet, kubectl")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("RELEASE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-sSL")]),e._v(" https://dl.k8s.io/release/stable.txt"),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v('"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-L")]),e._v(" --remote-name-all https://dl.k8s.io/release/"),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${RELEASE}")]),e._v("/bin/linux/"),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${ARCH}")]),e._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("kubeadm,kubelet,kubectl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("chmod")]),e._v(" +x "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("kubeadm,kubelet,kubectl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 下载 service")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("RELEASE_VERSION")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"v0.16.2"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-sSL")]),e._v(" --remote-name-all "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"https://raw.githubusercontent.com/kubernetes/release/'),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${RELEASE_VERSION}")]),e._v('/cmd/krel/templates/latest/kubelet/kubelet.service"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-sSL")]),e._v(" --remote-name-all "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"https://raw.githubusercontent.com/kubernetes/release/'),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${RELEASE_VERSION}")]),e._v('/cmd/krel/templates/latest/kubeadm/10-kubeadm.conf"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-p")]),e._v(" /etc/systemd/system/kubelet.service.d\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sed")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-e")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"s:/usr/bin/kubelet:'),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${WORK_DIR}")]),e._v('/kubelet:g"')]),e._v(" kubelet.service "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("tee")]),e._v(" /etc/systemd/system/kubelet.service\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sed")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-e")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"s:/usr/bin/kubelet:'),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${WORK_DIR}")]),e._v('/kubelet:g"')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-e")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"s:/etc/sysconfig:'),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${WORK_DIR}")]),e._v('/env:g"')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-e")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"s:/var/lib/kubelet:'),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${WORK_DIR}")]),e._v('/env:g"')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-e")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"s:/etc/kubernetes:'),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${WORK_DIR}")]),e._v('/env:g"')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),e._v("-kubeadm.conf "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("tee")]),e._v(" /etc/systemd/system/kubelet.service.d/10-kubeadm.conf\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);